
name: Test trip_server

on:
  push:
    branches: ["test_env"]
  pull_request:
    branches: ["test_env"]

jobs:
  build:
    runs-on: self-hosted
    environment: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build docker image to build trip_server
        uses: docker/build-push-action@v2
        with:
          load: true
          tags: golang-builder:${{ github.sha }}
          context: ./docker/build
          file: ./docker/build/golang_builder.dockerfile

      - name: Build trip_server executable
        uses: addnab/docker-run-action@v3
        with:
            image: golang-builder:${{ github.sha }}
            options: --rm -v ${{ github.workspace }}:/app -w /app
            run: |
              make build_trip_server

      - name: Upload trip_server binary
        uses: actions/upload-artifact@v3
        with:
          name: trip_server_binary
          path: ./trip_server

      - name: Download trip_server binary
        uses: actions/download-artifact@v2
        with:
          name: trip_server_binary
          path: ./docker/servers/trip-server/trip_server

      - name: Build trip_server server image
        uses: docker/build-push-action@v2
        with:
          load: true
          tags: |
            trip-server:${{ github.sha }}
            trip-server:test
          secrets: |
            "GMAPS_API_KEY=${{ secrets.GMAPS_API_KEY }}"
            "RS_LOG_LEVEL=${{ secrets.RS_LOG_LEVEL }}"
            "RS_DB_USER=${{ secrets.RS_DB_USER }}"
            "RS_DB_PASS=${{ secrets.RS_DB_PASS }}"
            "RS_DB_HOST=${{ secrets.RS_DB_HOST }}"
            "RS_DB_PORT=${{ secrets.RS_DB_PORT }}"
          context: ./docker/servers/trip-server/.
          file: ./docker/servers/trip-server/trip_server.dockerfile

      - name: Build mongodb image
        uses: docker/build-push-action@v2
        with:
          load: true
          tags: |
            mongodb:${{ github.sha }}
            mongodb:test
          context: ./docker/mongo/.
          file: ./docker/mongo/mongo.dockerfile
  
  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Start minikube
        uses: medyagh/setup-minikube@latest
        with:
          addons: ingress

      - name: Deploy testenv to minikube
        run: |
          eval $(minikube -p minikube docker-env)
          alias kubectl='minikube kubectl --'
          minikube image load trip-server:test
          minikube image load mongodb:test
          make delete_kube_deployment
          make apply_kube_deployment
